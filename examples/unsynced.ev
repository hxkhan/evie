package main

fn fib(n) unsynced {
    if n < 2 {
        return n
    }
    return fib(n-1) + fib(n-2)
}

// go run ./cli -t ./examples/unsynced.ev
fn main() {
    a := go fib(35)
    b := go fib(35)
    c := go fib(35)

    echo await.all(a, b, c)

    /* timeout := go time.wait(30)
    switch result := await {
        case a:
            echo `result -> {result}` // result -> 9227465
        case b:
            echo `result -> {result}` // result -> 9227465
        case c:
            echo `result -> {result}` // result -> 9227465
        case timeout:
            echo "timeout threshold hit!"
    }

    // or
    echo await(a, b, c) // -> [(task, 9227465), (task, 9227465), (task, 9227465)]
    // or
    echo await.values(a, b, c) // -> [9227465, 9227465, 9227465]

    // or
    timeout := go time.wait(30)
    for (task, result) := await(a, b, c, timeout) {
        if task == timeout {
            echo "timeout threshold hit!"
            break
        }
        echo `result -> {result}` // result -> 9227465
    }

    // ok
    for v := [2, 3, 8, 12] {
        echo `{v}`
    }

    // ok
    for i, v := [2, 3, 8, 12] {
        echo `{i} -> {v}`
    } */
}