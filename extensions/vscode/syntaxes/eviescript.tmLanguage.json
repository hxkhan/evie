{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "EvieScript",
	"patterns": [
	  {
		"include": "#keywords"
	  },
	  {
		"include": "#strings"
	  },
	  {
		"include": "#chars"
	  },
	  {
		"include": "#comments"
	  },
	  {
		"include": "#block_comment"
	  },
	  {
		"include": "#numeric_literals"
	  },
	  {
		"comment": "await and variants",
		"name": "keyword.control.await.eviescript",
		"match": "\\bawait(\\.(all|any))?\\b"
	  },	
	  {
		"comment": "Boolean constant",
		"name": "constant.language.boolean.eviescript",
		"match": "\\b(true|false)\\b"
	  },
	  {
		"comment": "Constant",
		"name": "constant.language.eviescript",
		"match": "\\b(null)\\b"
	  },
	  {
		"comment": "Built-in functions",
		"match": "\\b(bool|number|str)\\b(?=\\()",
		"name": "support.function.builtin.eviescript"
	  },
	  {
		"comment": "Comparison operator",
		"name": "keyword.operator.comparison.eviescript",
		"match": "(&&|\\|\\||==|!=)"
	  },
	  {
		"comment": "Assignment operator",
		"name": "keyword.operator.assignment.eviescript",
		"match": "(\\+=|-=|/=|\\*=|%=|\\^=|&=|&^=|\\|=|<<=|>>=|=|--|\\+\\+)"
	  },
	  {
		"comment": "Arithmetic operator",
		"name": "keyword.operator.arithmetic.eviescript",
		"match": "(!|\\+|-|/|\\*|%|\\^|&|\\||<<|>>|&^)"
	  },
	  {
		"comment": "Comparison operator (second group because of regex precedence)",
		"name": "keyword.operator.comparison.eviescript",
		"match": "(<=|>=|<|>)"
	  },
	  {
		"comment": "Function call",
		"match": "\\b([A-Za-z][A-Za-z0-9_]*|_[A-Za-z0-9_]+)\\s*\\(",
		"captures": {
		  "1": {
			"name": "entity.name.function.eviescript"
		  }
		}
	  },
	  {
		"comment": "Miscellaneous operator",
		"name": "keyword.operator.misc.eviescript"
	  }
	],
	"repository": {
	  "keywords": {
		"patterns": [
		  {
			"name": "keyword.control.eviescript",
			"match": "\\b(package|if|else|for|return|fn|type|new|var|echo|go)\\b"
		  }
		]
	  },
	  "strings": {
		"name": "string.quoted.double.eviescript",
		"begin": "\"",
		"end": "\"",
		"patterns": [
		  {
			"name": "constant.character.escape.eviescript",
			"match": "\\\\."
		  }
		]
	  },
	  "chars": {
		"name": "string.quoted.simple.eviescript",
		"begin": "'",
		"end": "'",
		"patterns": [
		  {
			"name": "constant.character.escape.eviescript",
			"match": "\\\\."
		  }
		]
	  },
	  "comments": {
		"name": "comment.line.eviescript",
		"begin": "//",
		"end": "\n"
	  },
	  "block_comment": {
		"comment": "Block comment",
		"name": "comment.block.eviescript",
		"begin": "/\\*",
		"end": "\\*/"
	  },
	  "numeric_literals": {
		"patterns": [
		  {
			"comment": "Integer literal",
			"name": "constant.numeric.integer.eviescript",
			"match": "\\b\\d+\\b"
		  },
		  {
			"comment": "Floating-point literal",
			"name": "constant.numeric.float.eviescript",
			"match": "\\b\\d+\\.\\d+([eE][-+]?\\d+)?\\b"
		  },
		  {
			"comment": "Hexadecimal literal",
			"name": "constant.numeric.hex.eviescript",
			"match": "\\b0[xX][0-9a-fA-F]+\\b"
		  }
		]
	  }
	},
	"scopeName": "source.es"
  }
  